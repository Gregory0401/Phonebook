{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/phoneBook/phonebook-selector.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","views/ContactsView/ContactsView.js"],"names":["module","exports","getContacts","state","contacts","getFilter","filter","getFilterContacts","createSelector","items","name","toLowerCase","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","className","s","title","contactForm","type","onSubmit","preventDefault","find","contact","toast","warning","position","autoClose","trim","addContact","success","label","placeholder","formInput","pattern","required","onChange","disabled","Filter","length","changeFilter","currentTarget","ContactList","list","map","id","text","buttonDelete","onClick","deleteContact","ContactsView","useEffect","fetchContacts"],"mappings":"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","file":"static/js/contacts-page.221d3c1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactForm_title__3MqSl\",\"label\":\"ContactForm_label__378f8\",\"formInput\":\"ContactForm_formInput__1r2bF\",\"contactForm\":\"ContactForm_contactForm__OrlO3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"formInput\":\"Filter_formInput__dCodg\",\"title\":\"Filter_title__mtLuE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactList_title__ATLM_\",\"buttonDelete\":\"ContactList_buttonDelete__3uAAK\",\"text\":\"ContactList_text__2dM24\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.contacts;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilterContacts = createSelector(\n    [getContacts, getFilter],\n    (items, filter) =>\n        items.filter(({ name }) =>\n            name.toLowerCase().includes(filter.toLowerCase()),\n        ),\n);\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { addContact } from 'redux/phoneBook/phonebook-operations';\nimport { getContacts } from 'redux/phoneBook/phonebook-selector';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const contacts = useSelector(getContacts);\n    const dispatch = useDispatch();\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (\n            contacts.find(\n                contact => contact.name.toLowerCase() === name.toLowerCase(),\n            )\n        ) {\n            toast.warning(`${name} is already in contacts!`, {\n                position: 'top-center',\n                autoClose: 2500,\n            });\n        } else if (contacts.find(contact => contact.number === number)) {\n            toast.warning(`${number} is already in contacts!`, {\n                position: 'top-center',\n                autoClose: 2500,\n            });\n        } else if (!name.trim() || !number.trim()) {\n            toast.warning(`Enter the contact's name and number phone!`, {\n                position: 'top-center',\n                autoClose: 2500,\n            });\n        } else {\n            dispatch(addContact({ name, number }));\n            toast.success('Contact added to the phonebook!', {\n                position: 'top-center',\n                autoClose: 2500,\n            });\n            setName('');\n            setNumber('');\n        }\n    };\n\n    return (\n        <>\n            <h1 className={s.title}>Phonebook</h1>\n            <div className={s.contactForm}>\n                <form type=\"submit\" onSubmit={handleSubmit}>\n                    <label className={s.label}>\n                        Name\n                        <input\n                            placeholder=\"Contact name\"\n                            className={s.formInput}\n                            type=\"text\"\n                            name=\"name\"\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                            required\n                            onChange={handleChange}\n                            value={name}\n                        />\n                    </label>\n                    <label className={s.label}>\n                        Number\n                        <input\n                            className={s.formInput}\n                            type=\"tel\"\n                            placeholder=\"Contact number\"\n                            name=\"number\"\n                            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n                            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n                            required\n                            onChange={handleChange}\n                            value={number}\n                        />\n                    </label>\n\n                    <button type=\"submit\" disabled={!name || !number}>\n                        Add contact\n                    </button>\n                </form>\n            </div>\n        </>\n    );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/phoneBook/phonebook-selector';\nimport { changeFilter } from 'redux/phoneBook/phonebook-slice';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n    const filter = useSelector(getFilter);\n    const contacts = useSelector(getContacts);\n    const dispatch = useDispatch();\n\n    const onChangeInput = e => {\n        dispatch(changeFilter(e.currentTarget.value));\n    };\n    return (\n        <>\n            <h2 className={s.title}>Contacts: {contacts.length} </h2>\n            <label className={s.label}>\n                <input\n                    placeholder=\"Search\"\n                    className={s.formInput}\n                    type=\"text\"\n                    value={filter}\n                    onChange={onChangeInput}\n                />\n            </label>\n        </>\n    );\n}\n","import { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilterContacts } from 'redux/phoneBook/phonebook-selector';\nimport { deleteContact } from 'redux/phoneBook/phonebook-operations';\nimport s from './ContactList.module.css';\n\nexport default function ContactList() {\n    const contacts = useSelector(getFilterContacts);\n    const dispatch = useDispatch();\n\n    return (\n        <>\n            <h2 className={s.title}>Contacts</h2>\n            <ul className={s.list}>\n                {contacts.map(({ id, name, number }) => (\n                    <li key={id}>\n                        <span className={s.text}>{`${name}: ${number}`}</span>\n                        <button\n                            className={s.buttonDelete}\n                            type=\"button\"\n                            onClick={() => {\n                                dispatch(deleteContact(id));\n                                toast.success(\n                                    `Contact ${name} ${number} deleted!`,\n                                    {\n                                        position: 'top-center',\n                                        autoClose: 2500,\n                                    },\n                                );\n                            }}\n                        >\n                            Delete\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </>\n    );\n}\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/phoneBook/phonebook-operations';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\n\nconst ContactsView = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <>\n            <ContactForm />\n            <Filter />\n            <ContactList />\n        </>\n    );\n};\n\nexport default ContactsView;\n"],"sourceRoot":""}