{"version":3,"sources":["views/RegisterView/RegisterView.module.css","views/RegisterView/RegisterView.js"],"names":["module","exports","RegisterView","dispatch","useDispatch","isLoggedIn","useSelector","getIsLoggedIn","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","className","s","title","contactForm","onSubmit","e","preventDefault","register","toast","success","position","autoClose","label","formInput","type","placeholder","onChange","minlength","disabled","to"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,MAAQ,4BAA4B,UAAY,gCAAgC,YAAc,kCAAkC,MAAQ,4B,oKCO3I,SAASC,IACpB,IAAMC,EAAWC,cACXC,EAAaC,YAAYC,KAC/B,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACpC,OAAQR,GACJ,IAAK,OACD,OAAOC,EAAQO,GACnB,IAAK,QACD,OAAOL,EAASK,GACpB,IAAK,WACD,OAAOH,EAAYG,GACvB,QACI,OAEX,EAcD,OACI,qCACI,oBAAIC,UAAWC,IAAEC,MAAjB,qBACA,sBAAKF,UAAWC,IAAEE,YAAlB,UACI,uBAAMC,SAhBG,SAAAC,GACjBA,EAAEC,iBACFrB,EAASsB,YAAS,CAAEhB,OAAME,QAAOE,cACjCa,IAAMC,QAAN,mBAA0BlB,EAA1B,KAAmC,CAC/BmB,SAAU,aACVC,UAAW,OAEfjB,EAAS,IACTF,EAAQ,IACRI,EAAY,GACf,EAMW,UACI,wBAAOI,UAAWC,IAAEW,MAApB,kBAEI,uBACIZ,UAAWC,IAAEY,UACbC,KAAK,OACLvB,KAAK,OACLQ,MAAOR,EACPwB,YAAY,iBACZC,SAAUnB,OAIlB,wBAAOG,UAAWC,IAAEW,MAApB,kBAEI,uBACIZ,UAAWC,IAAEY,UACbC,KAAK,QACLvB,KAAK,QACLQ,MAAON,EACPsB,YAAY,aACZC,SAAUnB,OAIlB,wBAAOG,UAAWC,IAAEW,MAApB,qBAEI,uBACIZ,UAAWC,IAAEY,UACbC,KAAK,WACLvB,KAAK,WACLQ,MAAOJ,EACPsB,UAAU,IACVF,YAAY,gBACZC,SAAUnB,OAIlB,wBACIiB,KAAK,SACLI,UAAW3B,IAASE,IAAUE,EAFlC,uBAOHR,GAAc,cAAC,IAAD,CAAUgC,GAAG,WAI3C,C","file":"static/js/register-page.8905ece4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"RegisterView_label__3FXZM\",\"formInput\":\"RegisterView_formInput__1nOZ1\",\"contactForm\":\"RegisterView_contactForm__1eDgz\",\"title\":\"RegisterView_title__3fvKf\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router';\nimport { toast } from 'react-toastify';\nimport { register } from 'redux/auth/auth-operation';\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors';\nimport s from './RegisterView.module.css';\n\nexport default function RegisterView() {\n    const dispatch = useDispatch();\n    const isLoggedIn = useSelector(getIsLoggedIn);\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleChange = ({ target: { name, value } }) => {\n        switch (name) {\n            case 'name':\n                return setName(value);\n            case 'email':\n                return setEmail(value);\n            case 'password':\n                return setPassword(value);\n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        dispatch(register({ name, email, password }));\n        toast.success(`Welcome, ${name}!`, {\n            position: 'top-center',\n            autoClose: 2500,\n        });\n        setEmail('');\n        setName('');\n        setPassword('');\n    };\n\n    return (\n        <>\n            <h2 className={s.title}>Sign Up</h2>\n            <div className={s.contactForm}>\n                <form onSubmit={handleSubmit}>\n                    <label className={s.label}>\n                        Login\n                        <input\n                            className={s.formInput}\n                            type=\"text\"\n                            name=\"name\"\n                            value={name}\n                            placeholder=\"Your Full Name\"\n                            onChange={handleChange}\n                        />\n                    </label>\n\n                    <label className={s.label}>\n                        Email\n                        <input\n                            className={s.formInput}\n                            type=\"email\"\n                            name=\"email\"\n                            value={email}\n                            placeholder=\"Your Email\"\n                            onChange={handleChange}\n                        />\n                    </label>\n\n                    <label className={s.label}>\n                        Password\n                        <input\n                            className={s.formInput}\n                            type=\"password\"\n                            name=\"password\"\n                            value={password}\n                            minlength=\"8\"\n                            placeholder=\"Your Password\"\n                            onChange={handleChange}\n                        />\n                    </label>\n\n                    <button\n                        type=\"submit\"\n                        disabled={!name || !email || !password}\n                    >\n                        Submit\n                    </button>\n                </form>\n                {isLoggedIn && <Navigate to=\"/\" />}\n            </div>\n        </>\n    );\n}\n"],"sourceRoot":""}