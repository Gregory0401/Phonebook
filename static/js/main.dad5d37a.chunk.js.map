{"version":3,"sources":["redux/auth/auth-slice.js","redux/store.js","components/AppBar/Navigation/Navigation.js","components/AppBar/AuthNav/AuthNav.js","components/AppBar/UserMenu/avatar.png","components/AppBar/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/Container/Container.js","routes/PrivateRoute.js","routes/PublicRoute.js","components/App/App.js","index.js","redux/auth/auth-selectors.js","redux/phoneBook/phonebook-operations.js","components/AppBar/Navigation/Navigation.module.css","components/AppBar/AuthNav/AuthNav.module.css","redux/auth/auth-operation.js","components/AppBar/UserMenu/UserMenu.module.css","redux/phoneBook/phonebook-slice.js","components/AppBar/AppBar.module.css","components/Container/Container.module.css","redux/auth/auth-action.js"],"names":["registerRequest","authActions","registerSuccess","registerError","logInRequest","logInSuccess","logInError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","authSlice","createSlice","name","initialState","user","email","token","isLoggedIn","isLoading","error","isFetchingCurrentUser","extraReducers","state","payload","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsSlice","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","Navigation","useSelector","getIsLoggedIn","to","exact","className","s","link","activeClassName","activeLink","AuthNav","UserMenu","dispatch","useDispatch","getUserName","avatar","defaultAvatar","container","src","alt","width","type","onClick","logOut","toast","info","position","autoClose","AppBar","header","Container","children","PrivateRoute","redirectTo","props","PublicRoute","restricted","routeProps","shouldRedirect","HomeView","lazy","LoginView","RegisterView","ContactsView","App","getFetchingCurrentUser","useEffect","fetchCurrentUser","color","height","fallback","path","ReactDOM","render","StrictMode","loading","document","getElementById","getAuthError","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","message","addContact","contact","post","deleteContact","contactId","delete","status","Error","module","exports","headers","common","Authorization","register","userData","logIn","getState","persistedToken","filter","reducers","changeFilter","action","fulfilled","pending","rejected","push","id","actions","createAction"],"mappings":"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","file":"static/js/main.dad5d37a.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport authActions from './auth-action';\n\nconst {\n    registerRequest,\n    registerSuccess,\n    registerError,\n    logInRequest,\n    logInSuccess,\n    logInError,\n    logoutRequest,\n    logoutSuccess,\n    logoutError,\n    getCurrentUserRequest,\n    getCurrentUserSuccess,\n    getCurrentUserError,\n} = authActions;\n\nconst initialState = {\n    user: { name: null, email: null },\n    token: null,\n    isLoggedIn: false,\n    isLoading: false,\n    error: null,\n    isFetchingCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    extraReducers: {\n        [registerRequest]: state => {\n            state.isLoading = true;\n        },\n        [registerSuccess]: (state, { payload }) => {\n            state.user = payload.user;\n            state.token = payload.token;\n            state.isLoggedIn = true;\n            state.isLoading = false;\n        },\n        [registerError]: (state, { payload }) => {\n            state.error = payload;\n        },\n        //\n        //\n        [logInRequest]: state => {\n            state.isLoading = true;\n        },\n        [logInSuccess]: (state, { payload }) => {\n            state.user = payload.user;\n            state.token = payload.token;\n            state.isLoggedIn = true;\n            state.isLoading = false;\n        },\n        [logInError]: (state, { payload }) => {\n            state.error = payload;\n        },\n        //\n        //\n        [logoutRequest]: state => {\n            state.isLoading = true;\n        },\n        [logoutSuccess]: state => {\n            state.user = { name: null, email: null };\n            state.token = null;\n            state.isLoggedIn = false;\n            state.isLoading = false;\n            state.error = null;\n        },\n        [logoutError]: (state, { payload }) => {\n            state.error = payload;\n        },\n        //\n        //\n        [getCurrentUserRequest]: state => {\n            state.isLoading = true;\n            state.isFetchingCurrentUser = true;\n        },\n        [getCurrentUserSuccess]: (state, { payload }) => {\n            state.user = payload;\n            state.isLoggedIn = true;\n            state.isLoading = false;\n            state.isFetchingCurrentUser = false;\n        },\n        [getCurrentUserError]: state => {\n            state.isLoading = false;\n            state.isFetchingCurrentUser = false;\n        },\n    },\n});\n\nexport default authSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsSlice from './phoneBook/phonebook-slice';\nimport authReducer from './auth/auth-slice';\n\nconst authPersistConfig = {\n    key: 'auth',\n    storage,\n    whitelist: ['token'],\n};\n\nexport const store = configureStore({\n    reducer: {\n        auth: persistReducer(authPersistConfig, authReducer),\n        contacts: contactsSlice,\n    },\n    middleware: getDefaultMiddleware =>\n        getDefaultMiddleware({\n            serializableCheck: {\n                ignoredActions: [\n                    FLUSH,\n                    REHYDRATE,\n                    PAUSE,\n                    PERSIST,\n                    PURGE,\n                    REGISTER,\n                ],\n            },\n        }),\n    devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors';\nimport s from './Navigation.module.css';\n\nconst Navigation = () => {\n    const isLoggedIn = useSelector(getIsLoggedIn);\n    return (\n        <nav>\n            <NavLink\n                to=\"/\"\n                exact\n                className={s.link}\n                activeClassName={s.activeLink}\n            >\n                Home\n            </NavLink>\n\n            {isLoggedIn && (\n                <NavLink\n                    to=\"/contacts\"\n                    exact\n                    className={s.link}\n                    activeClassName={s.activeLink}\n                >\n                    Contacts\n                </NavLink>\n            )}\n        </nav>\n    );\n};\n\nexport default Navigation;\n","import { NavLink } from 'react-router-dom';\nimport s from './AuthNav.module.css';\n\nexport default function AuthNav() {\n    return (\n        <div>\n            <NavLink\n                to=\"/register\"\n                exact\n                className={s.link}\n                activeClassName={s.activeLink}\n            >\n                Register\n            </NavLink>\n            <NavLink\n                to=\"/login\"\n                exact\n                className={s.link}\n                activeClassName={s.activeLink}\n            >\n                Login\n            </NavLink>\n        </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/avatar.c7554b2c.png\";","import { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { getUserName } from 'redux/auth/auth-selectors';\nimport { logOut } from 'redux/auth/auth-operation';\nimport defaultAvatar from './avatar.png';\nimport s from './UserMenu.module.css';\n\nexport default function UserMenu() {\n    const dispatch = useDispatch();\n    const name = useSelector(getUserName);\n    const avatar = defaultAvatar;\n\n    return (\n        <div className={s.container}>\n            <img src={avatar} alt=\"avatar\" width=\"32\" className={s.avatar} />\n            <span className={s.name}>Welcome, {name}</span>\n            <button\n                type=\"button\"\n                onClick={() => {\n                    dispatch(logOut());\n                    toast.info('You logged out of your account !', {\n                        position: 'top-center',\n                        autoClose: 2500,\n                    });\n                }}\n            >\n                Log Out\n            </button>\n        </div>\n    );\n}\n","import { useSelector } from 'react-redux';\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors';\n\nimport Navigation from './Navigation';\nimport AuthNav from './AuthNav';\nimport UserMenu from './UserMenu';\n\nimport s from './AppBar.module.css';\n\nexport default function AppBar() {\n    const isLoggedIn = useSelector(getIsLoggedIn);\n\n    return (\n        <header className={s.header}>\n            <Navigation />\n            {isLoggedIn ? <UserMenu /> : <AuthNav />}\n        </header>\n    );\n}\n","import s from './Container.module.css';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ children }) => (\n    <div className={s.container}>{children}</div>\n);\n\nContainer.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Container;\n","import { useSelector } from 'react-redux';\nimport { Navigate, Route } from 'react-router';\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors';\n\nexport default function PrivateRoute({ children, redirectTo = '/', ...props }) {\n    const isLoggedIn = useSelector(getIsLoggedIn);\n\n    return (\n        <Route {...props}>\n            {isLoggedIn ? children : <Navigate to={redirectTo} />}\n        </Route>\n    );\n}\n// import { useSelector } from 'react-redux';\n// import { Navigate } from 'react-router-dom';\n// import { authSelectors } from 'authorization';\n\n// export default function PrivateRoute({ children }) {\n//   const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n//   return <>{isLoggedIn ? children : <Navigate to=\"/\" />}</>;\n// }","import { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors';\n\nexport default function PublicRoute({\n    children,\n    restricted = false,\n    redirectTo = '/',\n    ...routeProps\n}) {\n    const isLoggedIn = useSelector(getIsLoggedIn);\n    const shouldRedirect = isLoggedIn && restricted;\n    return (\n        <Route {...routeProps}>\n            {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n        </Route>\n    );\n}\n","import { Suspense, lazy, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch } from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport AppBar from '../AppBar';\nimport { fetchCurrentUser } from 'redux/auth/auth-operation';\nimport Container from '../Container';\nimport PrivateRoute from 'routes/PrivateRoute';\nimport PublicRoute from 'routes/PublicRoute';\nimport { getFetchingCurrentUser } from 'redux/auth/auth-selectors';\n\nconst HomeView = lazy(() =>\n    import('views/HomeView' /* webpackChunkName: \"home-page\" */),\n);\nconst LoginView = lazy(() =>\n    import('views/LoginView' /* webpackChunkName: \"login-page\" */),\n);\nconst RegisterView = lazy(() =>\n    import('views/RegisterView' /* webpackChunkName: \"register-page\" */),\n);\nconst ContactsView = lazy(() =>\n    import('views/ContactsView' /* webpackChunkName: \"contacts-page\" */),\n);\n\nexport default function App() {\n    const dispatch = useDispatch();\n    const isFetchingCurrentUser = useSelector(getFetchingCurrentUser);\n\n    useEffect(() => {\n        dispatch(fetchCurrentUser());\n    }, [dispatch]);\n\n    return (\n        <>\n            {isFetchingCurrentUser ? (\n                <Loader\n                    className=\"Spinner\"\n                    type=\"Circles\"\n                    color=\"#1b39e2\"\n                    height={300}\n                    width={300}\n                />\n            ) : (\n                <>\n                    <AppBar />\n                    <ToastContainer />\n                    <Container>\n                        <Suspense\n                            fallback={\n                                <Loader\n                                    className=\"Spinner\"\n                                    type=\"Circles\"\n                                    color=\"#1b39e2\"\n                                    height={300}\n                                    width={300}\n                                />\n                            }\n                        >\n                            <Switch>\n                                <PublicRoute exact path=\"/\">\n                                    <HomeView />\n                                </PublicRoute>\n\n                                <PublicRoute\n                                    exact\n                                    path=\"/register\"\n                                    redirectTo=\"/contacts\"\n                                    restricted\n                                >\n                                    <RegisterView />\n                                </PublicRoute>\n\n                                <PublicRoute\n                                    exact\n                                    path=\"/login\"\n                                    redirectTo=\"/contacts\"\n                                    restricted\n                                >\n                                    <LoginView />\n                                </PublicRoute>\n\n                                <PrivateRoute\n                                    path=\"/contacts\"\n                                    redirectTo=\"/login\"\n                                >\n                                    <ContactsView />\n                                </PrivateRoute>\n                            </Switch>\n                        </Suspense>\n                    </Container>\n                </>\n            )}\n        </>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <PersistGate loading={<h2>Wait...</h2>} persistor={persistor}>\n                <BrowserRouter>\n                    <App />\n                </BrowserRouter>\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n","export const getUserName = state => state.auth.user.name;\nexport const getIsLoggedIn = state => state.auth.isLoggedIn;\nexport const getFetchingCurrentUser = state => state.auth.isFetchingCurrentUser;\nexport const getAuthError = state => state.auth.error;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const fetchContacts = createAsyncThunk(\n    'phonebook/fetchContacts',\n    async (_, { rejectWithValue }) => {\n        try {\n            const { data } = await axios.get('/contacts');\n            return data;\n        } catch (error) {\n            return rejectWithValue(error.message);\n        }\n    },\n);\n\nexport const addContact = createAsyncThunk(\n    'phonebook/addContact',\n    async (contact, { rejectWithValue }) => {\n        try {\n            const { data } = await axios.post('/contacts', contact);\n            return data;\n        } catch (error) {\n            return rejectWithValue(error.message);\n        }\n    },\n);\n\nexport const deleteContact = createAsyncThunk(\n    'phonebook/deleteContact',\n    async (contactId, { rejectWithValue }) => {\n        try {\n            const { status } = await axios.delete(`/contacts/${contactId}`);\n            if (status === 200) {\n                return contactId;\n            } else {\n                throw new Error({ message: 'error' });\n            }\n        } catch (error) {\n            return rejectWithValue(error.message);\n        }\n    },\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__YyxB8\",\"activeLink\":\"Navigation_activeLink__OgrPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__HsFlU\",\"activeLink\":\"AuthNav_activeLink__3HbVg\"};","import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport authActions from './auth-action';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n    set(token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n    unset() {\n        axios.defaults.headers.common.Authorization = '';\n    },\n};\n\nexport const register = userData => async dispatch => {\n    dispatch(authActions.registerRequest());\n\n    try {\n        const { data } = await axios.post('/users/signup', userData);\n        token.set(data.token);\n        dispatch(authActions.registerSuccess(data));\n    } catch (error) {\n        dispatch(authActions.registerError(error.message));\n        toast.error(error.message);\n    }\n};\n\nexport const logIn = userData => async dispatch => {\n    dispatch(authActions.logInRequest());\n\n    try {\n        const { data } = await axios.post('/users/login', userData);\n        token.set(data.token);\n\n        dispatch(authActions.logInSuccess(data));\n    } catch (error) {\n        dispatch(authActions.logInError(error.message));\n        toast.error(error.message);\n    }\n};\n\nexport const logOut = userData => async dispatch => {\n    dispatch(authActions.logoutRequest());\n    try {\n        await axios.post('/users/logout');\n        token.unset();\n        dispatch(authActions.logoutSuccess());\n    } catch (error) {\n        dispatch(authActions.logoutError(error.message));\n    }\n};\n\nexport const fetchCurrentUser = () => async (dispatch, getState) => {\n    const {\n        auth: { token: persistedToken },\n    } = getState();\n\n    if (!persistedToken) return;\n\n    token.set(persistedToken);\n    dispatch(authActions.getCurrentUserRequest());\n\n    try {\n        const { data } = await axios.get('/users/current');\n        dispatch(authActions.getCurrentUserSuccess(data));\n    } catch (error) {\n        dispatch(authActions.getCurrentUserError(error.message));\n    }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__f3UoN\",\"avatar\":\"UserMenu_avatar__3fZxw\",\"name\":\"UserMenu_name__3AUlF\"};","import { createSlice } from '@reduxjs/toolkit';\nimport {\n    addContact,\n    deleteContact,\n    fetchContacts,\n} from './phonebook-operations';\n\nconst contactsSlice = createSlice({\n    name: 'phoneBook',\n    initialState: {\n        contacts: [],\n        isLoading: false,\n        filter: '',\n    },\n    reducers: {\n        changeFilter: (state, action) => {\n            state.filter = action.payload;\n        },\n    },\n    extraReducers: {\n        [fetchContacts.fulfilled](state, { payload }) {\n            state.contacts = payload;\n            state.isLoading = false;\n        },\n        [fetchContacts.pending](state) {\n            state.isLoading = true;\n        },\n        [fetchContacts.rejected](state) {\n            state.isLoading = false;\n        },\n        //\n        //\n        [addContact.pending](state) {\n            state.isLoading = true;\n        },\n        [addContact.fulfilled](state, { payload }) {\n            state.contacts.push(payload);\n            state.isLoading = false;\n        },\n        [addContact.rejected](state) {\n            state.isLoading = false;\n        },\n        //\n        //\n        [deleteContact.pending](state) {\n            state.isLoading = true;\n        },\n        [deleteContact.fulfilled](state, { payload }) {\n            state.contacts = state.contacts.filter(\n                contact => contact.id !== payload,\n            );\n            state.isLoading = false;\n        },\n        [deleteContact.rejected](state) {\n            state.isLoading = false;\n        },\n    },\n});\n\nexport default contactsSlice.reducer;\nexport const { changeFilter } = contactsSlice.actions;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__1Yk8v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst logInRequest = createAction('auth/logInRequest');\nconst logInSuccess = createAction('auth/logInSuccess');\nconst logInError = createAction('auth/logInError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nconst authActions = {\n    registerRequest,\n    registerSuccess,\n    registerError,\n    logInRequest,\n    logInSuccess,\n    logInError,\n    logoutRequest,\n    logoutSuccess,\n    logoutError,\n    getCurrentUserRequest,\n    getCurrentUserSuccess,\n    getCurrentUserError,\n};\n\nexport default authActions;\n"],"sourceRoot":""}